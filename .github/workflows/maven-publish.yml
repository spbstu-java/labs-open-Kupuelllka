name: Java Labs CI/CD Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  release:
    types: [created]

jobs:
  build-and-test:

    name: Build and Test Java Labs
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v4
      
    - name: Create Maven pom.xml
      run: |
        cat > pom.xml << 'EOF'
        <?xml version="1.0" encoding="UTF-8"?>
        <project xmlns="http://maven.apache.org/POM/4.0.0"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 
                http://maven.apache.org/xsd/maven-4.0.0.xsd">
            <modelVersion>4.0.0</modelVersion>
            
            <groupId>com.university.labs</groupId>
            <artifactId>java-labs</artifactId>
            <version>1.0.0</version>
            <packaging>jar</packaging>
            
            <name>Java Labs Project</name>
            <description>University Java laboratories</description>
            
            <properties>
                <maven.compiler.source>17</maven.compiler.source>
                <maven.compiler.target>17</maven.compiler.target>
                <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
            </properties>
            
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <version>3.11.0</version>
                        <configuration>
                            <source>17</source>
                            <target>17</target>
                        </configuration>
                    </plugin>
                </plugins>
                <resources>
                    <resource>
                        <directory>lab_3/data</directory>
                        <includes>
                            <include>dict.txt</include>
                        </includes>
                    </resource>
                </resources>
            </build>
        </project>
        EOF
            
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: 'maven'
        server-id: github
        
    - name: Build project structure
      run: |
        # Создаем Maven структуру
        mkdir -p src/main/java
        mkdir -p src/test/java
        
        # Копируем исходные файлы в Maven структуру
        find lab_1/ -name "*.java" -exec cp --parents {} src/main/java/ \; 2>/dev/null || true
        find lab_2/ -name "*.java" -exec cp --parents {} src/main/java/ \; 2>/dev/null || true
        find lab_3/ -name "*.java" -exec cp --parents {} src/main/java/ \; 2>/dev/null || true
        find lab_4/ -name "*.java" -exec cp --parents {} src/main/java/ \; 2>/dev/null || true
        
        # Копируем файлы данных
        mkdir -p src/main/resources
        cp -r lab_3/data/ src/main/resources/ 2>/dev/null || true
        
    - name: Compile project
      run: mvn compile -q
      
    - name: Run tests if exist
      run: |
        # Проверяем есть ли тесты и запускаем их
        if find . -name "*Test.java" | grep -q .; then
          mvn test -q
        else
          echo "No test files found, skipping tests"
        fi
        
    - name: Package JAR
      run: mvn package -DskipTests -q
      
    - name: Upload JAR artifact
      uses: actions/upload-artifact@v4
      with:
        name: java-labs-jar
        path: target/*.jar
        
    - name: List project structure for debugging
      run: |
        echo "Project structure:"
        find . -name "*.java" | head -10
        echo "Data files:"
        find . -name "*.txt"
        echo "POM file exists:"
        ls -la pom.xml
        
    - name: Publish to GitHub Packages
      if: github.event_name == 'release'
      run: |
        # Настраиваем settings.xml для публикации
        mkdir -p ~/.m2
        cat > ~/.m2/settings.xml <<EOF
        <settings xmlns="http://maven.apache.org/SETTINGS/1.0.0"
                  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                  xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0
                                      http://maven.apache.org/xsd/settings-1.0.0.xsd">
            <servers>
                <server>
                    <id>github</id>
                    <username>\${{ github.actor }}</username>
                    <password>\${{ secrets.GITHUB_TOKEN }}</password>
                </server>
            </servers>
        </settings>
        EOF
        
        mvn deploy -DskipTests -s ~/.m2/settings.xml
      env:
        GITHUB_TOKEN: \${{ github.token }}
