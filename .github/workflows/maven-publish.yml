name: Java Labs CI/CD Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  release:
    types: [created]

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: 'maven'
        server-id: github
        
    - name: Build and test with Maven
      run: |
        # Создаем структуру проекта для Maven
        mkdir -p src/main/java
        mkdir -p src/test/java
        
        # Копируем исходные файлы в структуру Maven
        # Лабораторная работа 1
        mkdir -p src/main/java/lab_1/{applications,classes}
        cp -r lab_1/applications/* src/main/java/lab_1/applications/ 2>/dev/null || true
        cp -r lab_1/classes/* src/main/java/lab_1/classes/ 2>/dev/null || true
        
        # Лабораторная работа 2
        mkdir -p src/main/java/lab_2/{applications,classes}
        cp -r lab_2/applications/* src/main/java/lab_2/applications/ 2>/dev/null || true
        cp -r lab_2/classes/* src/main/java/lab_2/classes/ 2>/dev/null || true
        
        # Лабораторная работа 3
        mkdir -p src/main/java/lab_3/{applications,classes,data}
        cp -r lab_3/applications/* src/main/java/lab_3/applications/ 2>/dev/null || true
        cp -r lab_3/classes/* src/main/java/lab_3/classes/ 2>/dev/null || true
        cp -r lab_3/data/* src/main/java/lab_3/data/ 2>/dev/null || true
        
        # Создаем минимальный pom.xml если его нет
        if [ ! -f pom.xml ]; then
          cat > pom.xml << 'EOF'
          <?xml version="1.0" encoding="UTF-8"?>
          <project xmlns="http://maven.apache.org/POM/4.0.0"
                  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 
                  http://maven.apache.org/xsd/maven-4.0.0.xsd">
              <modelVersion>4.0.0</modelVersion>
              
              <groupId>com.university.labs</groupId>
              <artifactId>java-labs</artifactId>
              <version>1.0.0</version>
              <packaging>jar</packaging>
              
              <name>Java Labs Project</name>
              <description>University Java laboratories</description>
              
              <properties>
                  <maven.compiler.source>17</maven.compiler.source>
                  <maven.compiler.target>17</maven.compiler.target>
                  <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
              </properties>
              
              <build>
                  <plugins>
                      <plugin>
                          <groupId>org.apache.maven.plugins</groupId>
                          <artifactId>maven-compiler-plugin</artifactId>
                          <version>3.11.0</version>
                          <configuration>
                              <source>17</source>
                              <target>17</target>
                          </configuration>
                      </plugin>
                      <plugin>
                          <groupId>org.codehaus.mojo</groupId>
                          <artifactId>exec-maven-plugin</artifactId>
                          <version>3.1.0</version>
                          <configuration>
                              <mainClass>lab_3.applications.TranslatorTest</mainClass>
                          </configuration>
                      </plugin>
                  </plugins>
              </build>
          </project>
          EOF
        fi
        
        # Компилируем проект
        mvn compile -q
        
        # Запускаем тесты (если есть)
        mvn test -q || true
        
    - name: Create JAR package
      run: |
        mvn package -DskipTests -q
        ls -la target/
        
    - name: Upload JAR artifact
      uses: actions/upload-artifact@v4
      with:
        name: java-labs-jar
        path: target/*.jar
        
    - name: Publish to GitHub Packages
      if: github.event_name == 'release'
      run: |
        # Настраиваем settings.xml для публикации
        mkdir -p ~/.m2
        cat > ~/.m2/settings.xml <<EOF
        <settings xmlns="http://maven.apache.org/SETTINGS/1.0.0"
                  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                  xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0
                                      http://maven.apache.org/xsd/settings-1.0.0.xsd">
            <servers>
                <server>
                    <id>github</id>
                    <username>\${{ github.actor }}</username>
                    <password>\${{ secrets.GITHUB_TOKEN }}</password>
                </server>
            </servers>
        </settings>
        EOF
                
        # Публикуем артефакт
        mvn deploy -DskipTests -s ~/.m2/settings.xml
      env:
        GITHUB_TOKEN: \${{ github.token }}